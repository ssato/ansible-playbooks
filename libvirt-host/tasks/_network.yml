---
- name: Check if libvirt networks are ready
  command: "virsh net-info {{ _network.name }}"
  ignore_errors: true
  register: find_libvirt_network

- name: Install libvirt netowrk XML file
  template:
    src: libvirt-network.xml.j2
    dest: "/etc/libvirt/qemu/networks/{{ _network.name }}.xml"
    backup: yes
  when:
    - find_libvirt_network|failed
    - _network.create

- name: Define libvirt netwrok from XML file installed before
  command: "virsh net-define /etc/libvirt/qemu/networks/{{ _network.name }}.xml"
  when:
    - find_libvirt_network|failed
    - _network.create

- name: Start libvirt netwrok
  command: "virsh net-start {{ _network.name }}"
  ignore_errors: true  # Currently, defined but not started networks are not skipped.
  when:
    # TODO:
    # - "{{ find_libvirt_network|failed or 'Active: no' in find_libvirt_network.stdout_lines }}"
    - find_libvirt_network|failed
    - "{{ _network.start is not defined or 
         (_network.start is defined and _network.start) }}"

- name: Set autostart libvirt netwrok
  command: "virsh net-autostart {{ _network.name }}"
  when:
    - find_libvirt_network|failed
    - "{{ _network.autostart is not defined or 
         (_network.autostart is defined and _network.autostart) }}"

- name: Configure DNS resolv for NetworkManager
  lineinfile:
    dest: "/etc/NetworkManager/dnsmasq.d/libvirt_dnsmasq_{{ _network.name }}.conf"
    state: present
    create: true
    regexp: "^server.*"
    line: "server=/{{ _network.domain }}/{{ _network.gw_ip }}"
  when:
    - "{{ _network.hosts is defined and _network.hosts }}"

# vim:sw=2:ts=2:et:
